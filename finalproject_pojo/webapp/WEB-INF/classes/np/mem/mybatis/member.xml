<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="np.mem.mybatis.MemberMapper"> 
<!-- resultMap 에 Alias 명으로써 memberVO 를 세팅해준다
		다른 xml의 resultMap 에 있는 id와 겹치면 안된다.-->
  <resultMap id="memberVO" type="np.com.vo.MemberVO"/>
<!-- 위 resultMap 세팅과 아래 parameterType 의 memberVO 는 다른것이다.
		 아래 parameterType 의 memberVO 는 Configuration.xml 의 typeAliases 에 있는 memberVO를 가져온 것이다.
-->
 <select id="proc_Reg" parameterType="memberVO" statementType="CALLABLE"> <!-- 타입에는 추상클래스, 그리고 경로까지 적어주는게 원칙 -->
 	{ call proc_Reg(
 	
 		#{field,mode=IN,jdbcType=VARCHAR, javaType=java.lang.String}
 		,#{m_id,mode=IN,jdbcType=VARCHAR, javaType=java.lang.String}
 		,#{m_pw,mode=IN,jdbcType=VARCHAR, javaType=java.lang.String}
 		,#{m_zip,mode=IN,jdbcType=VARCHAR, javaType=java.lang.String}
 		,#{m_hp,mode=IN,jdbcType=VARCHAR, javaType=java.lang.String}
 		,#{m_name,mode=IN,jdbcType=VARCHAR, javaType=java.lang.String}
 		,#{m_nick,mode=IN,jdbcType=VARCHAR, javaType=java.lang.String}
 		,#{m_gender,mode=IN,jdbcType=VARCHAR, javaType=java.lang.String}
 		,#{m_birth,mode=IN,jdbcType=VARCHAR, javaType=java.lang.String}
 		,#{m_mail,mode=IN,jdbcType=VARCHAR, javaType=java.lang.String}
 		,#{msg,mode=OUT,jdbcType=VARCHAR, javaType=java.lang.String}
 	)}
 </select> 
 
 <select id="proc_idCheck" parameterType="memberVO" statementType="CALLABLE"> <!-- 타입에는 추상클래스, 그리고 경로까지 적어주는게 원칙 -->
 	{ call proc_idcheck(
 	
 	)}
 </select> 
 
 <select id="proc_resume" parameterType="memberVO" statementType="CALLABLE"> <!-- 타입에는 추상클래스, 그리고 경로까지 적어주는게 원칙 -->
 	{ call proc_resume(
 	
 	)}
 </select> 
 
 <select id="proc_Login" parameterType="memberVO" statementType="CALLABLE"> <!-- 타입에는 추상클래스, 그리고 경로까지 적어주는게 원칙 -->
 	{ call proc_Login(
 		#{m_id,mode=IN,jdbcType=VARCHAR, javaType=java.lang.String}
 		,#{m_pw,mode=IN,jdbcType=VARCHAR, javaType=java.lang.String}
 		,#{msg,mode=OUT,jdbcType=VARCHAR, javaType=java.lang.String}
 	)}
 </select> 
 
 <!-- 아래에 있는 resultMap과 위에 태그로 세팅된 resultMap 은 같은 것이다. 
 		  그러므로 위에 세팅해준 memberVO가 있기에
 		  아래 resultMap 에 memberVO 를 입력, 사용가능하다
 -->
 <!-- 미구현(회원정보받아오기) 커서사용 -->
     <select id="proc_myPage" statementType="CALLABLE">
        {
            CALL proc_myPage(
                #{result, mode=OUT, jdbcType=CURSOR, javaType=ResultSet, resultMap=memberVO}
            )
        }
    </select>
    
 <!-- 미구현(회원정보수정하기) -->
     <select id="proc_updateMypage" parameterType="memberVO" statementType="CALLABLE">
        {
            CALL proc_updateMypage(
            )
        }
    </select>
    
 <!-- 미구현(회원 탈퇴) -->
     <select id="proc_withDraw" parameterType="memberVO" statementType="CALLABLE">
        {
            CALL proc_withDraw(
            )
        }
    </select>


</mapper>